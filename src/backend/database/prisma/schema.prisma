generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model assignments {
  id                   Int                    @id @default(autoincrement())
  name                 String                 @db.VarChar
  deadline             DateTime?              @db.Timestamp(6)
  created_at           DateTime               @db.Timestamp(6)
  learning_path        String                 @db.Uuid
  class                Int
  classes              classes                @relation(fields: [class], references: [id], onDelete: NoAction, onUpdate: NoAction)
  learning_paths       learning_paths         @relation(fields: [learning_path], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  conversation         conversation[]
  groups               groups[]
  submissions          submissions[]
  teachers_assignments teachers_assignments[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model classes {
  id               Int                @id @default(autoincrement())
  name             String?            @db.VarChar
  assignments      assignments[]
  classes_students classes_students[]
  classes_teachers classes_teachers[]
  groups           groups[]
}

model classes_students {
  classes_id  Int
  students_id Int
  classes     classes  @relation(fields: [classes_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  students    students @relation(fields: [students_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([classes_id, students_id])
}

model classes_teachers {
  classes_id  Int
  teachers_id Int
  classes     classes  @relation(fields: [classes_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers    teachers @relation(fields: [teachers_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([classes_id, teachers_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model conversation {
  id                                         Int              @id @default(autoincrement())
  title                                      String?          @db.VarChar
  learning_object                            String           @db.Uuid
  teachers                                   Int[]
  group                                      Int
  assignment                                 Int
  assignments                                assignments      @relation(fields: [assignment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  groups                                     groups           @relation(fields: [group], references: [id], onDelete: NoAction, onUpdate: NoAction)
  learning_objects                           learning_objects @relation(fields: [learning_object], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  teachers_conversation_teachersToteachers   teachers         @relation("conversation_teachersToteachers", fields: [teachers], references: [id], onDelete: NoAction, onUpdate: NoAction)
  message_message_conversationToconversation message[]        @relation("message_conversationToconversation")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model groups {
  id              Int               @id @default(autoincrement())
  name            String?           @db.VarChar
  class           Int
  assignment      Int
  conversation    conversation[]
  assignments     assignments       @relation(fields: [assignment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  classes         classes           @relation(fields: [class], references: [id], onDelete: NoAction, onUpdate: NoAction)
  students_groups students_groups[]
  submissions     submissions[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model learning_objects {
  id                              String                            @id @map("_id") @db.VarChar
  hruid                           String                            @db.VarChar
  uuid                            String                            @unique @db.Uuid
  language                        String                            @db.VarChar
  version                         String                            @db.VarChar
  html_content                    String                            @db.VarChar
  conversation                    conversation[]
  learning_objects_metadata       learning_objects_metadata?
  learning_path_nodes             learning_path_nodes[]
  learning_paths_learning_objects learning_paths_learning_objects[]
  students_learning_objects       students_learning_objects[]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model learning_objects_metadata {
  id                String           @id @map("_id") @db.VarChar
  uuid              String           @unique @db.Uuid
  version           Int
  language          String           @db.VarChar
  title             String?          @db.VarChar
  description       String?          @db.VarChar
  content_type      content_type?
  keywords          String[]         @db.VarChar
  target_ages       Int[]
  teacher_exclusive Boolean
  skos_concepts     String[]         @db.VarChar
  educatioanl_goals Json?            @db.Json
  copyright         String?          @db.VarChar
  license           String?          @db.VarChar
  difficulty        Int
  estimated_time    Int
  return_value      Json?            @db.Json
  available         Boolean
  content_location  String           @db.VarChar
  learning_objects  learning_objects @relation(fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model learning_path_nodes {
  id                                                Int              @id @default(autoincrement())
  learning_object_id                                String           @db.VarChar
  start_node                                        Boolean?
  learning_path                                     String           @db.Uuid
  learning_objects                                  learning_objects @relation(fields: [learning_object_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  learning_paths                                    learning_paths   @relation(fields: [learning_path], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  transitions_transitions_idTolearning_path_nodes   transitions?     @relation("transitions_idTolearning_path_nodes")
  transitions_transitions_nextTolearning_path_nodes transitions[]    @relation("transitions_nextTolearning_path_nodes")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model learning_paths {
  hruid                           String                            @db.VarChar
  uuid                            String                            @id @db.Uuid
  language                        String                            @db.VarChar
  title                           String?                           @db.VarChar
  description                     String?                           @db.VarChar
  image                           String?                           @db.VarChar
  assignments                     assignments[]
  learning_path_nodes             learning_path_nodes[]
  learning_paths_learning_objects learning_paths_learning_objects[]
}

model learning_paths_learning_objects {
  learning_paths_uuid   String           @db.Uuid
  learning_objects_uuid String           @db.Uuid
  learning_objects      learning_objects @relation(fields: [learning_objects_uuid], references: [uuid], onDelete: NoAction, onUpdate: NoAction)
  learning_paths        learning_paths   @relation(fields: [learning_paths_uuid], references: [uuid], onDelete: NoAction, onUpdate: NoAction)

  @@id([learning_paths_uuid, learning_objects_uuid])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model message {
  id                                              Int                       @id @default(autoincrement())
  content                                         String?                   @db.VarChar
  offset                                          Unsupported("int8range")?
  is_student                                      Boolean
  student                                         Int?
  index                                           Int
  conversation                                    Int
  conversation_message_conversationToconversation conversation              @relation("message_conversationToconversation", fields: [conversation], references: [id], onDelete: NoAction, onUpdate: NoAction)
  students                                        students?                 @relation(fields: [student], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model notifications {
  id       Int       @id @default(autoincrement())
  title    String    @db.VarChar
  content  String    @db.VarChar
  read     Boolean
  student  Int?
  teacher  Int?
  students students? @relation(fields: [student], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers teachers? @relation(fields: [teacher], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model students {
  id                        Int                         @id @default(autoincrement())
  username                  String                      @db.VarChar
  email                     String                      @unique @db.VarChar
  password                  String?                     @db.VarChar
  active_language           String                      @db.VarChar
  created_at                DateTime                    @db.Timestamp(6)
  classes_students          classes_students[]
  message                   message[]
  notifications             notifications[]
  students_groups           students_groups[]
  students_learning_objects students_learning_objects[]
}

model students_groups {
  students_id Int
  groups_id   Int
  groups      groups   @relation(fields: [groups_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  students    students @relation(fields: [students_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([students_id, groups_id])
}

model students_learning_objects {
  students_id          Int
  learning_objects__id String           @db.VarChar
  learning_objects     learning_objects @relation(fields: [learning_objects__id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  students             students         @relation(fields: [students_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([students_id, learning_objects__id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model submissions {
  id                 Int             @id @default(autoincrement())
  group              Int
  assignment         Int
  submission_type    submission_type
  submission_content Json            @db.Json
  graded_by          Int?
  assignments        assignments     @relation(fields: [assignment], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers           teachers?       @relation(fields: [graded_by], references: [id], onDelete: NoAction, onUpdate: NoAction)
  groups             groups          @relation(fields: [group], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model teachers {
  id                                           Int                    @id @default(autoincrement())
  username                                     String                 @db.VarChar
  password                                     String?                @db.VarChar
  email                                        String                 @unique @db.VarChar
  active_language                              String                 @db.VarChar
  created_at                                   DateTime               @db.Timestamp(6)
  classes_teachers                             classes_teachers[]
  conversation_conversation_teachersToteachers conversation[]         @relation("conversation_teachersToteachers")
  notifications                                notifications[]
  submissions                                  submissions[]
  teachers_assignments                         teachers_assignments[]
}

model teachers_assignments {
  teachers_id    Int
  assignments_id Int
  assignments    assignments @relation(fields: [assignments_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  teachers       teachers    @relation(fields: [teachers_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([teachers_id, assignments_id])
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model transitions {
  id                                                        Int                       @id @default(autoincrement())
  condition                                                 String?                   @db.VarChar
  default                                                   Boolean?
  instruction                                               Unsupported("int8range")?
  next                                                      Int?
  learning_path_nodes_transitions_idTolearning_path_nodes   learning_path_nodes       @relation("transitions_idTolearning_path_nodes", fields: [id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  learning_path_nodes_transitions_nextTolearning_path_nodes learning_path_nodes?      @relation("transitions_nextTolearning_path_nodes", fields: [next], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum content_type {
  text_plain        @map("text/plain")
  text_markdown     @map("text/markdown")
  image_image_block @map("image/image-block")
  image_image       @map("image/image")
  audio_mpeg        @map("audio/mpeg")
  application_pdf   @map("application/pdf")
  extern
  blocky
}

enum submission_type {
  multiplechoice
  image
}
